{"ast":null,"code":"import FileUpload from '@/components/FileUpload.vue';\nimport ChatBox from '@/components/ChatBox.vue';\nexport default {\n  name: 'HomePage',\n  components: {\n    FileUpload,\n    ChatBox\n  },\n  data() {\n    return {\n      username: '管理员',\n      userAvatar: require('@/assets/avatar.png'),\n      logoImage: require('@/assets/logo.png'),\n      emptyKbImage: require('@/assets/empty-kb.png'),\n      emptyFileImage: require('@/assets/empty-file.png'),\n      welcomeImage: require('@/assets/welcome.png'),\n      isAdmin: false,\n      knowledgeBases: [],\n      currentKb: null,\n      currentKbDetails: null,\n      currentChatId: null,\n      kbSearchQuery: '',\n      fileSearchQuery: '',\n      globalSearch: '',\n      searchScope: 'all',\n      loading: false,\n      sendingMessage: false,\n      editDialogVisible: false,\n      uploadDialogVisible: false,\n      userMessage: '',\n      selectedModel: 'deepseek-v3',\n      webSearchEnabled: false,\n      editForm: {\n        id: null,\n        name: '',\n        description: '',\n        visibility: 'private'\n      },\n      editType: 'create',\n      suggestedQuestions: [{\n        text: '关于劳动争议案件适用法律的最新解释'\n      }, {\n        text: '撰写一个「新闻价值」的名词解释'\n      }, {\n        text: '分手了，恋爱期间的赠与还能要回吗?'\n      }],\n      kbColors: ['#5e7ce0', '#6b7de3', '#787ee6', '#857fe9', '#9280ec', '#9f81ef', '#ac82f2', '#b983f5', '#c684f8', '#d385fb']\n    };\n  },\n  computed: {\n    editDialogTitle() {\n      return this.editType === 'create' ? '新建知识库' : '编辑知识库';\n    },\n    filteredKnowledgeBases() {\n      if (!this.kbSearchQuery) {\n        return this.knowledgeBases;\n      }\n      return this.knowledgeBases.filter(kb => kb.name.toLowerCase().includes(this.kbSearchQuery.toLowerCase()) || kb.description && kb.description.toLowerCase().includes(this.kbSearchQuery.toLowerCase()));\n    },\n    filteredFiles() {\n      if (!this.currentKbDetails || !this.currentKbDetails.files) return [];\n      if (!this.fileSearchQuery) {\n        return this.currentKbDetails.files;\n      }\n      return this.currentKbDetails.files.filter(file => file.name.toLowerCase().includes(this.fileSearchQuery.toLowerCase()));\n    }\n  },\n  created() {\n    this.initUserData();\n    this.fetchKnowledgeBases();\n  },\n  methods: {\n    initUserData() {\n      const userData = localStorage.getItem('user');\n      if (userData) {\n        const user = JSON.parse(userData);\n        this.username = user.username || '管理员';\n        this.isAdmin = user.is_admin || false;\n        if (user.avatar) {\n          this.userAvatar = user.avatar;\n        }\n      }\n    },\n    async fetchKnowledgeBases() {\n      this.loading = true;\n      try {\n        // 模拟API调用获取知识库列表\n        await new Promise(resolve => setTimeout(resolve, 800));\n\n        // 模拟数据\n        this.knowledgeBases = [{\n          id: 1,\n          name: '法律法规知识库',\n          file_count: 8,\n          description: '关于劳动争议案件适用法律的最新解释',\n          update_time: '2023-06-15T08:30:00Z',\n          files: [{\n            id: 101,\n            name: '劳动法解释.pdf',\n            type: 'pdf',\n            size: 2456789,\n            upload_time: '2023-06-15T08:30:00Z'\n          }, {\n            id: 102,\n            name: '劳动合同范本.docx',\n            type: 'docx',\n            size: 12456,\n            upload_time: '2023-06-18T14:20:00Z'\n          }]\n        }, {\n          id: 2,\n          name: '新闻传播学资料库',\n          file_count: 12,\n          description: '撰写一个「新闻价值」的名词解释',\n          update_time: '2023-06-20T10:45:00Z',\n          files: [{\n            id: 201,\n            name: '新闻学理论.pdf',\n            type: 'pdf',\n            size: 3456789,\n            upload_time: '2023-06-20T极速问诊10:45:00Z'\n          }]\n        }, {\n          id: 3,\n          name: '公益法律援助智库',\n          file_count: 5,\n          description: '分手了，恋爱期间的赠与还能要回吗?',\n          update_time: '2023-06-22T16:15:极速问诊00Z',\n          files: []\n        }];\n        if (this.knowledgeBases.length > 0 && !this.current极速问诊Kb) {\n          this.currentKb = this.knowledgeBases[0].id;\n          this.currentKbDetails = this.knowledgeBases[0];\n        }\n      } catch (error) {\n        this.$message.error('获取知识库失败: ' + (error.message || '未知错误'));\n      } finally {\n        this.loading = false;\n      }\n    },\n    selectKb(kb) {\n      this.currentKb = kb.id;\n      this.currentKbDetails = kb;\n      this.currentChatId = null; // 切换知识库时重置聊天\n    },\n    createKB() {\n      this.editType = 'create';\n      this.editForm = {\n        id: null,\n        name: '',\n        description: '',\n        visibility: 'private'\n      };\n      this.editDialogVisible = true;\n    },\n    editKB(kb) {\n      this.editType = 'edit';\n      this.editForm = {\n        id: kb.id,\n        name: kb.name,\n        description: kb.description || '',\n        visibility: 'private'\n      };\n      this.editDialogVisible = true;\n    },\n    confirmEdit() {\n      if (!this.editForm.name.trim()) {\n        this.$message.warning('请输入知识库名称');\n        return;\n      }\n      if (this.editType === 'create') {\n        // 创建新知识库\n        const newKb = {\n          id: Date.now(),\n          name: this.editForm.name,\n          description: this.edit极速问诊Form.description,\n          file_count: 0,\n          files: [],\n          update_time: new Date().toISOString()\n        };\n        this.knowledgeBases.push(newKb);\n        this.currentKb = newKb.id;\n        this.currentKbDetails = newKb;\n        this.$message.success(`知识库\"${newKb.name}\"创建成功`);\n      } else {\n        // 编辑现有知识库\n        const kbIndex = this.knowledgeBases.findIndex(kb => kb.id === this.editForm.id);\n        if (kbIndex !== -1) {\n          this.knowledgeBases[kbIndex].name = this.editForm.name;\n          this.knowledgeBases[kbIndex].description = this.editForm.description;\n          if (this.currentKb === this.editForm.id) {\n            this.currentKbDetails = this.knowledgeBases[kbIndex];\n          }\n          this.$message.success('知识库更新成功');\n        }\n      }\n      this.editDialogVisible = false;\n    },\n    deleteKb(kb) {\n      this.$confirm(`确定删除知识库 \"${kb.name}\"? 所有关联文件也将被删除`, '删除确认', {\n        confirmButtonText: '删除',\n        cancelButtonText: '取消',\n        type: 'warning',\n        confirmButtonClass: 'el-button--danger'\n      }).then(() => {\n        const kbIndex = this.knowledgeBases.findIndex(k => k.id === kb.id);\n        if (kbIndex !== -1) {\n          this.knowledgeBases.splice(kbIndex, 1);\n          if (this.currentKb === kb.id) {\n            this.currentKb = this.knowledgeBases.length > 0 ? this.knowledgeBases[0].id : null;\n            this.currentKbDetails = this.currentKb ? this.knowledgeBases[0] : null;\n          }\n          this.$message.success('知识库已删除');\n        }\n      }).catch(() => {});\n    },\n    shareKB(kb) {\n      this.$prompt('请输入分享对象的邮箱', '分享知识库', {\n        confirmButtonText: '分享',\n        cancelButtonText: '取消',\n        inputPattern: /^[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?/,\n        inputErrorMessage: '邮箱格式不正确'\n      }).then(({\n        value\n      }) => {\n        this.$message.success(`已分享知识库\"${kb.name}\"给 ${value}`);\n      }).catch(() => {});\n    },\n    exportKB(kb) {\n      this.$message.info(`开始导出知识库: ${kb.name}`);\n      // 实际应用中这里应调用API导出知识库\n    },\n    handleUploadSuccess(fileData) {\n      if (!this.currentKbDetails.files) {\n        this.currentKbDetails.files = [];\n      }\n      this.currentKbDetails.files.push({\n        id: Date.now(),\n        name: fileData.filename,\n        type: fileData.type || 'unknown',\n        size: fileData.size || 0,\n        upload_time: new Date().toISOString()\n      });\n      this.currentKbDetails.file_count = this.currentKbDetails.files.length;\n      this.uploadDialogVisible = false;\n      this.$message.success(`文件\"${fileData.filename}\"上传成功`);\n    },\n    handleUploadClose(done) {\n      this.$confirm('确定要关闭上传窗口吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        done();\n      }).catch(() => {});\n    },\n    getFileIcon(fileType) {\n      const typeMap = {\n        pdf: 'pdf-color',\n        txt: 'txt-color',\n        doc: 'doc-color',\n        docx: 'doc-color',\n        xls: 'xls-color',\n        xlsx: 'xls-color',\n        ppt: 'ppt-color',\n        pptx: 'ppt-color'\n      };\n      const type = fileType.toLowerCase();\n      return typeMap[type] || 'el-icon-document';\n    },\n    getKbColor(kbId) {\n      return this.kbColors[kbId % this.kbColors.length];\n    },\n    formatSize(bytes) {\n      if (bytes === 0) return '0 B';\n      const k = 1024;\n      const sizes = ['B', 'KB', 'MB', 'GB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    },\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\n    },\n    formatRelativeTime(dateString) {\n      const date = new Date(dateString);\n      const now = new Date();\n      const diffTime = Math.abs(now - date);\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n      if (diffDays === 1) return '今天';\n      if (diffDays === 2) return '昨天';\n      if (diffDays < 7) return `${diffDays}天前`;\n      if (diffDays < 30) return `${Math.floor(diffDays / 7)}周前`;\n      return this.formatDate(dateString);\n    },\n    downloadFile(file) {\n      this.$message.info(`开始下载: ${file.name}`);\n      // 实际应用中这里应调用API下载文件\n    },\n    previewFile(file) {\n      this.$message.info(`预览文件: ${file.name}`);\n      // 实际应用中这里应实现文件预览功能\n    },\n    deleteFile(file) {\n      this.$confirm(`确定删除文件 \"${file.name}\"?`, '删除确认', {\n        confirmButtonText: '删除',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        const fileIndex = this.currentKbDetails.files.findIndex(f => f.id === file.id);\n        if (fileIndex !== -1) {\n          this.currentKbDetails.files.splice(fileIndex, 1);\n          this.currentKbDetails.file_count = this.currentKbDetails.files.length;\n          this.$message.success('文件极速问诊已删除');\n        }\n      }).catch(() => {});\n    },\n    showUploadDialog() {\n      if (!this.currentKb) {\n        this.$message.warning('请先选择一个知识库');\n        return;\n      }\n      this.uploadDialogVisible = true;\n    },\n    handleFileUpload(file) {\n      // 处理文件上传\n      this.showUploadDialog();\n      return false; // 阻止默认上传行为\n    },\n    sendMessage() {\n      if (!this.userMessage.trim()) return;\n      this.sendingMessage = true;\n\n      // 如果没有当前对话，创建一个新的\n      if (!this.currentChatId) {\n        this.currentChatId = 'chat_' + Date.now();\n      }\n\n      // 模拟发送消息的延迟\n      setTimeout(() => {\n        this.userMessage = '';\n        this.sendingMessage = false;\n      }, 500);\n    },\n    askSuggestedQuestion(question) {\n      this.userMessage = question;\n      this.sendMessage();\n    },\n    startNewChat() {\n      this.currentChatId = 'chat_' + Date.now();\n    },\n    showChatHistory() {\n      this.$message.info('打开对话历史');\n      // 实际应用中这里应打开对话历史面板\n    },\n    sortKbs(criteria) {\n      this.$message.info(`按${criteria}排序知识库`);\n      // 实际应用中这里应实现排序逻辑\n    },\n    sortFiles(criteria) {\n      this.$message.info(`按${criteria}排序文件`);\n      // 实际应用中这里应实现排序逻辑\n    },\n    goToProfile() {\n      this.$message.info('打开个人中心');\n      // 实际应用中这里应跳转到个人中心\n    },\n    goToAdmin() {\n      this.$router.push('/admin');\n    },\n    logout() {\n      this.$confirm('确定要退出登录吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'info'\n      }).then(() => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        if (this.$store) {\n          this.$store.commit('setToken', null);\n          this.$store.commit('setUser', null);\n        }\n        this.$router.push('/login');\n        this.$message.success('您已成功退出登录');\n      }).catch(() => {});\n    }\n  }\n};","map":{"version":3,"names":["FileUpload","ChatBox","name","components","data","username","userAvatar","require","logoImage","emptyKbImage","emptyFileImage","welcomeImage","isAdmin","knowledgeBases","currentKb","currentKbDetails","currentChatId","kbSearchQuery","fileSearchQuery","globalSearch","searchScope","loading","sendingMessage","editDialogVisible","uploadDialogVisible","userMessage","selectedModel","webSearchEnabled","editForm","id","description","visibility","editType","suggestedQuestions","text","kbColors","computed","editDialogTitle","filteredKnowledgeBases","filter","kb","toLowerCase","includes","filteredFiles","files","file","created","initUserData","fetchKnowledgeBases","methods","userData","localStorage","getItem","user","JSON","parse","is_admin","avatar","Promise","resolve","setTimeout","file_count","update_time","type","size","upload_time","length","current极速问诊Kb","error","$message","message","selectKb","createKB","editKB","confirmEdit","trim","warning","newKb","Date","now","edit极速问诊Form","toISOString","push","success","kbIndex","findIndex","deleteKb","$confirm","confirmButtonText","cancelButtonText","confirmButtonClass","then","k","splice","catch","shareKB","$prompt","inputPattern","inputErrorMessage","value","exportKB","info","handleUploadSuccess","fileData","filename","handleUploadClose","done","getFileIcon","fileType","typeMap","pdf","txt","doc","docx","xls","xlsx","ppt","pptx","getKbColor","kbId","formatSize","bytes","sizes","i","Math","floor","log","parseFloat","pow","toFixed","formatDate","dateString","date","getFullYear","getMonth","toString","padStart","getDate","formatRelativeTime","diffTime","abs","diffDays","ceil","downloadFile","previewFile","deleteFile","fileIndex","f","showUploadDialog","handleFileUpload","sendMessage","askSuggestedQuestion","question","startNewChat","showChatHistory","sortKbs","criteria","sortFiles","goToProfile","goToAdmin","$router","logout","removeItem","$store","commit"],"sources":["src/views/apps.vue"],"sourcesContent":["<template>\r\n  <div class=\"home-container\">\r\n    <!-- 顶部导航栏 -->\r\n    <el-header class=\"app-header\">\r\n      <div class=\"header-left\">\r\n        <div class=\"logo\">\r\n          <img :src=\"logoImage\" alt=\"Logo\" class=\"logo-img\" />\r\n          <h1 class=\"app-title\">智能知识库助手</h1>\r\n        </div>\r\n      </div>\r\n      <div class=\"header-center\">\r\n        <el-input\r\n          v-model=\"globalSearch\"\r\n          placeholder=\"搜索知识库内容...\"\r\n          prefix-icon=\"el-icon-search\"\r\n          class=\"global-search\"\r\n          clearable\r\n        >\r\n          <el-select\r\n            slot=\"prepend\"\r\n            v-model=\"searchScope\"\r\n            style=\"width: 110px\"\r\n            placeholder=\"范围\"\r\n          >\r\n            <el-option label=\"全部\" value=\"all\" />\r\n            <el-option label=\"知识库\" value=\"kb\" />\r\n            <el-option label=\"文件\" value=\"files\" />\r\n          </el-select>\r\n        </el-input>\r\n      </div>\r\n      <div class=\"header-right\">\r\n        <el-tooltip content=\"消息通知\" placement=\"bottom\">\r\n          <el-badge :value=\"5\" class=\"header-action\">\r\n            <i class=\"el-icon-bell\"></i>\r\n          </el-badge>\r\n        </el-tooltip>\r\n        <el-tooltip content=\"使用帮助\" placement=\"bottom\">\r\n          <div class=\"header-action\">\r\n            <i class=\"el-icon-question\"></i>\r\n          </div>\r\n        </el-tooltip>\r\n        <el-dropdown trigger=\"click\" class=\"user-dropdown\">\r\n          <span class=\"user-info\">\r\n            <el-avatar :src=\"userAvatar\" size=\"small\"></el-avatar>\r\n            <span class=\"username\">{{ username }}</span>\r\n            <i class=\"el-icon-caret-bottom\"></i>\r\n          </span>\r\n          <el-dropdown-menu slot=\"dropdown\">\r\n            <el-dropdown-item @click.native=\"goToProfile\">\r\n              <i class=\"el-icon-user\"></i> 个人中心\r\n            </el-dropdown-item>\r\n            <el-dropdown-item @click.native=\"goToAdmin\" v-if=\"isAdmin\">\r\n              <i class=\"el-icon-s-custom\"></i> 管理后台\r\n            </el-dropdown-item>\r\n            <el-dropdown-item divided @click.native=\"logout\">\r\n              <i class=\"el-icon-switch-button\"></i> 退出登录\r\n            </el-dropdown-item>\r\n          </el-dropdown-menu>\r\n        </el-dropdown>\r\n      </div>\r\n    </el-header>\r\n\r\n    <div class=\"main-content\">\r\n      <!-- 左侧知识库管理区域 -->\r\n      <div class=\"knowledge-section\">\r\n        <div class=\"section-header\">\r\n          <h2 class=\"section-title\">\r\n            <i class=\"el-icon-notebook-2\"></i>\r\n            知识库\r\n          </h2>\r\n          <el-button \r\n            type=\"primary\" \r\n            icon=\"el-icon-plus\" \r\n            @click=\"createKB\"\r\n            size=\"small\"\r\n            class=\"create-btn\">\r\n            新建\r\n          </el-button>\r\n        </div>\r\n        \r\n        <!-- 知识库搜索和筛选 -->\r\n        <div class=\"kb-toolbar\">\r\n          <el-input\r\n            placeholder=\"搜索知识库...\"\r\n            prefix-icon=\"el-icon-search\"\r\n            v-model=\"kbSearchQuery\"\r\n            clearable\r\n            size=\"small\"\r\n          ></el-input>\r\n          <el-dropdown trigger=\"click\" class=\"sort-dropdown\">\r\n            <el-button size=\"small\">\r\n              排序 <i class=\"el-icon-arrow-down\"></i>\r\n            </el-button>\r\n            <el-dropdown-menu slot=\"dropdown\">\r\n              <el-dropdown-item @click.native=\"sortKbs('name')\">按名称</el-dropdown-item>\r\n              <el-dropdown-item @click.native=\"sortKbs('update_time')\">按更新时间</el-dropdown-item>\r\n              <el-dropdown-item @click.native=\"sortKbs('file_count')\">按文件数量</el-dropdown-item>\r\n            </el-dropdown-menu>\r\n          </el-dropdown>\r\n        </div>\r\n        \r\n        <!-- 知识库列表 -->\r\n        <div class=\"kb-list\">\r\n          <div \r\n            v-for=\"kb in filteredKnowledgeBases\" \r\n            :key=\"kb.id\" \r\n            class=\"kb-item\"\r\n            :class=\"{ active: currentKb === kb.id }\"\r\n            @click=\"selectKb(kb)\">\r\n            <div class=\"kb-icon\">\r\n              <i class=\"el-icon-folder\" :style=\"{ color: getKbColor(kb.id) }\"></i>\r\n            </div>\r\n            <div class=\"kb-info\">\r\n              <div class=\"kb-name\">{{ kb.name }}</div>\r\n              <div class=\"kb-desc\">{{ kb.description || '暂无描述' }}</div>\r\n              <div class=\"kb-meta\">\r\n                <span class=\"file-count\">{{ kb.file_count }}个文件</span>\r\n                <span class=\"update-time\">更新于{{ formatRelativeTime(kb.update_time) }}</span>\r\n              </div>\r\n            </div>\r\n            <div class=\"kb-actions\">\r\n              <el-dropdown trigger=\"click\" @click.stop>\r\n                <span class=\"el-dropdown-link\">\r\n                  <i class=\"el-icon-more\"></i>\r\n                </span>\r\n                <el-dropdown-menu slot=\"dropdown\">\r\n                  <el-dropdown-item @click.native=\"editKB(kb)\">\r\n                    <i class=\"el-icon-edit\"></i> 编辑\r\n                  </el-dropdown-item>\r\n                  <el-dropdown-item @click.native=\"shareKB(kb)\">\r\n                    <i class=\"el-icon-share\"></i> 分享\r\n                  </el-dropdown-item>\r\n                  <el-dropdown-item @click.native=\"exportKB(kb)\" divided>\r\n                    <i class=\"el-icon-download\"></i> 导出\r\n                  </el-dropdown-item>\r\n                  <el-dropdown-item @click.native=\"deleteKb(kb)\" divided class=\"danger-item\">\r\n                    <i class=\"el-icon-delete\"></i> 删除\r\n                  </el-dropdown-item>\r\n                </el-dropdown-menu>\r\n              </el-dropdown>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- 空状态 -->\r\n        <div class=\"empty-state\" v-if=\"knowledgeBases.length === 0\">\r\n          <img :src=\"emptyKbImage\" class=\"empty-image\" />\r\n          <p class=\"empty-text\">您还没有创建任何知识库</p>\r\n          <p class=\"empty-subtext\">创建一个知识库开始整理和查询您的文档</p>\r\n          <el-button type=\"primary\" @click=\"createKB\">创建知识库</el-button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 中间聊天区域 -->\r\n      <div class=\"chat-section\">\r\n        <div class=\"chat-header\">\r\n          <div class=\"current-kb-info\" v-if=\"currentKbDetails\">\r\n            <div class=\"kb-badge\">\r\n              <i class=\"el-icon-folder\"></i>\r\n              <span>{{ currentKbDetails.name }}</span>\r\n            </div>\r\n            <el-tag \r\n              size=\"small\" \r\n              :type=\"currentKbDetails.file_count > 0 ? 'success' : 'info'\"\r\n            >\r\n              {{ currentKbDetails.file_count }}个文件\r\n            </el-tag>\r\n          </div>\r\n          <div class=\"chat-actions\">\r\n            <el-tooltip content=\"新建对话\" placement=\"top\">\r\n              <el-button icon=\"el-icon-plus\" circle @click=\"startNewChat\"></el-button>\r\n            </el-tooltip>\r\n            <el-tooltip content=\"对话历史\" placement=\"top\">\r\n              <el-button icon=\"el-icon-time\" circle @click=\"showChatHistory\"></el-button>\r\n            </el-tooltip>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"chat-container\">\r\n          <div class=\"chat-welcome\" v-if=\"!currentChatId\">\r\n            <div class=\"welcome-content\">\r\n              <img :src=\"welcomeImage\" class=\"welcome-image\" />\r\n              <h2>欢迎使用智能知识库助手</h2>\r\n              <p>选择或创建一个知识库开始智能对话</p>\r\n              <div class=\"suggested-questions\">\r\n                <div class=\"question-card\" v-for=\"(question, index) in suggestedQuestions\" :key=\"index\">\r\n                  <div class=\"question-content\">\r\n                    <div class=\"question-text\">{{ question.text }}</div>\r\n                    <el-button \r\n                      type=\"text\" \r\n                      icon=\"el-icon-s-promotion\" \r\n                      @click=\"askSuggestedQuestion(question.text)\"\r\n                      class=\"ask-btn\"\r\n                    >\r\n                    </el-button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"chat-main\" v-else>\r\n            <ChatBox :kb-id=\"currentKb\" :chat-id=\"currentChatId\" class=\"chat-box\"/>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"chat-input-container\">\r\n          <div class=\"input-actions\">\r\n            <el-tooltip content=\"上传文件\" placement=\"top\">\r\n              <el-upload\r\n                action=\"\"\r\n                :show-file-list=\"false\"\r\n                :before-upload=\"handleFileUpload\">\r\n                <el-button icon=\"el-icon-paperclip\" circle></el-button>\r\n              </el-upload>\r\n            </el-tooltip>\r\n            <el-tooltip content=\"语音输入\" placement=\"top\">\r\n              <el-button icon=\"el-icon-microphone\" circle></el-button>\r\n            </el-tooltip>\r\n          </div>\r\n          <div class=\"input-main\">\r\n            <el-input\r\n              v-model=\"userMessage\"\r\n              placeholder=\"输入问题或@知识库进行提问\"\r\n              @keyup.enter.native=\"sendMessage\"\r\n              class=\"message-input\"\r\n              type=\"textarea\"\r\n              :autosize=\"{ minRows: 1, maxRows: 4 }\"\r\n            >\r\n            </el-input>\r\n            <el-button \r\n              type=\"primary\" \r\n              icon=\"el-icon-s-promotion\" \r\n              @click=\"sendMessage\"\r\n              :disabled=\"!userMessage.trim()\"\r\n              class=\"send-button\"\r\n              :loading=\"sendingMessage\"\r\n            >\r\n            </el-button>\r\n          </div>\r\n          <div class=\"model-selector\">\r\n            <el-select v-model=\"selectedModel\" size=\"mini\" placeholder=\"模型\">\r\n              <el-option label=\"DeepSeek V3\" value=\"deepseek-v3\"></el-option>\r\n              <el-option label=\"GPT-4\" value=\"gpt-4\"></el-option>\r\n              <el-option label=\"Claude 3\" value=\"claude-3\"></el-option>\r\n            </el-select>\r\n            <el-tooltip content=\"启用联网搜索\" placement=\"top\">\r\n              <el-switch\r\n                v-model=\"webSearchEnabled\"\r\n                active-text=\"联网\"\r\n                inactive-text=\"\"\r\n                size=\"small\">\r\n              </el-switch>\r\n            </el-tooltip>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 右侧文件管理区域 -->\r\n      <div class=\"file-section\">\r\n        <div class=\"section-header\">\r\n          <h2 class=\"section-title\">\r\n            <i class=\"el-icon-document\"></i>\r\n            文件管理\r\n          </h2>\r\n          <el-button \r\n            type=\"primary\" \r\n            icon=\"el-icon-upload2\" \r\n            @click=\"showUploadDialog\"\r\n            size=\"small\"\r\n            :disabled=\"!currentKb\"\r\n          >\r\n            上传\r\n          </el-button>\r\n        </div>\r\n        \r\n        <div class=\"file-toolbar\">\r\n          <el-input\r\n            placeholder=\"搜索文件...\"\r\n            prefix-icon=\"el-icon-search\"\r\n            v-model=\"fileSearchQuery\"\r\n            size=\"small\"\r\n            clearable\r\n          ></el-input>\r\n          <el-dropdown trigger=\"click\">\r\n            <el-button size=\"small\" icon=\"el-icon-sort\"></el-button>\r\n            <el-dropdown-menu slot=\"dropdown\">\r\n              <el-dropdown-item @click.native=\"sortFiles('name')\">按名称</el-dropdown-item>\r\n              <el-dropdown-item @click.native=\"sortFiles('size')\">按大小</el-dropdown-item>\r\n              <el-dropdown-item @click.native=\"sortFiles('upload_time')\">按上传时间</el-dropdown-item>\r\n            </el-dropdown-menu>\r\n          </el-dropdown>\r\n        </div>\r\n        \r\n        <div class=\"file-list\" v-if=\"currentKbDetails && currentKbDetails.files && currentKbDetails.files.length > 0\">\r\n          <div \r\n            v-for=\"file in filteredFiles\" \r\n            :key=\"file.id\" \r\n            class=\"file-item\"\r\n            @dblclick=\"previewFile(file)\">\r\n            <div class=\"file-icon\">\r\n              <i class=\"el-icon-document\" :class=\"getFileIcon(file.type)\"></i>\r\n            </div>\r\n            <div class=\"file-info\">\r\n              <div class=\"file-name\">{{ file.name }}</div>\r\n              <div class=\"file-meta\">\r\n                <span>{{ formatSize(file.size) }}</span>\r\n                <span>•</span>\r\n                <span>{{ formatDate(file.upload_time) }}</span>\r\n              </div>\r\n            </div>\r\n            <div class=\"file-actions\">\r\n              <el-tooltip content=\"预览\" placement=\"top\">\r\n                <el-button icon=\"el-icon-view\" circle size=\"mini\" @click=\"previewFile(file)\"></el-button>\r\n              </el-tooltip>\r\n              <el-tooltip content=\"下载\" placement=\"top\">\r\n                <el-button icon=\"el-icon-download\" circle size=\"mini\" @click=\"downloadFile(file)\"></el-button>\r\n              </el-tooltip>\r\n              <el-tooltip content=\"删除\" placement=\"top\">\r\n                <el-button icon=\"el-icon-delete\" circle size=\"mini\" @click=\"deleteFile(file)\" class=\"danger-btn\"></el-button>\r\n              </el-tooltip>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"empty-state\" v-else>\r\n          <img :src=\"emptyFileImage\" class=\"empty-image\" />\r\n          <p class=\"empty-text\">当前知识库暂无文件</p>\r\n          <p class=\"empty-subtext\">上传文档开始构建您的知识库</p>\r\n          <el-button type=\"primary\" @click=\"showUploadDialog\">上传文件</el-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 上传文件对话框 -->\r\n    <el-dialog\r\n      title=\"上传文件\"\r\n      :visible.sync=\"uploadDialogVisible\"\r\n      width=\"500px\"\r\n      :before-close=\"handleUploadClose\">\r\n      <FileUpload :kb-id=\"currentKb\" @uploaded=\"handleUploadSuccess\"/>\r\n    </el-dialog>\r\n    \r\n    <!-- 知识库编辑对话框 -->\r\n    <el-dialog\r\n      :title=\"editDialogTitle\"\r\n      :visible.sync=\"editDialogVisible\"\r\n      width=\"500px\">\r\n      <el-form :model=\"editForm\" label-width=\"80px\">\r\n        <el-form-item label=\"名称\">\r\n          <el-input v-model=\"editForm.name\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\">\r\n          <el-input \r\n            type=\"textarea\" \r\n            v-model=\"editForm.description\" \r\n            :autosize=\"{ minRows: 2, maxRows: 4 }\"\r\n            placeholder=\"请输入知识库描述\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"可见性\">\r\n          <el-radio-group v-model=\"editForm.visibility\">\r\n            <el-radio label=\"private\">私有</el-radio>\r\n            <el-radio label=\"team\">团队</el-radio>\r\n            <el-radio label=\"public\">公开</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editDialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"confirmEdit\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport FileUpload from '@/components/FileUpload.vue';\r\nimport ChatBox from '@/components/ChatBox.vue';\r\n\r\nexport default {\r\n  name: 'HomePage',\r\n  components: {\r\n    FileUpload,\r\n    ChatBox\r\n  },\r\n  data() {\r\n    return {\r\n      username: '管理员',\r\n      userAvatar: require('@/assets/avatar.png'),\r\n      logoImage: require('@/assets/logo.png'),\r\n      emptyKbImage: require('@/assets/empty-kb.png'),\r\n      emptyFileImage: require('@/assets/empty-file.png'),\r\n      welcomeImage: require('@/assets/welcome.png'),\r\n      isAdmin: false,\r\n      knowledgeBases: [],\r\n      currentKb: null,\r\n      currentKbDetails: null,\r\n      currentChatId: null,\r\n      kbSearchQuery: '',\r\n      fileSearchQuery: '',\r\n      globalSearch: '',\r\n      searchScope: 'all',\r\n      loading: false,\r\n      sendingMessage: false,\r\n      editDialogVisible: false,\r\n      uploadDialogVisible: false,\r\n      userMessage: '',\r\n      selectedModel: 'deepseek-v3',\r\n      webSearchEnabled: false,\r\n      editForm: {\r\n        id: null,\r\n        name: '',\r\n        description: '',\r\n        visibility: 'private'\r\n      },\r\n      editType: 'create',\r\n      suggestedQuestions: [\r\n        { text: '关于劳动争议案件适用法律的最新解释' },\r\n        { text: '撰写一个「新闻价值」的名词解释' },\r\n        { text: '分手了，恋爱期间的赠与还能要回吗?' }\r\n      ],\r\n      kbColors: [\r\n        '#5e7ce0', '#6b7de3', '#787ee6', '#857fe9', '#9280ec',\r\n        '#9f81ef', '#ac82f2', '#b983f5', '#c684f8', '#d385fb'\r\n      ]\r\n    };\r\n  },\r\n  computed: {\r\n    editDialogTitle() {\r\n      return this.editType === 'create' ? '新建知识库' : '编辑知识库';\r\n    },\r\n    filteredKnowledgeBases() {\r\n      if (!this.kbSearchQuery) {\r\n        return this.knowledgeBases;\r\n      }\r\n      return this.knowledgeBases.filter(kb => \r\n        kb.name.toLowerCase().includes(this.kbSearchQuery.toLowerCase()) ||\r\n        (kb.description && kb.description.toLowerCase().includes(this.kbSearchQuery.toLowerCase()))\r\n      );\r\n    },\r\n    filteredFiles() {\r\n      if (!this.currentKbDetails || !this.currentKbDetails.files) return [];\r\n      \r\n      if (!this.fileSearchQuery) {\r\n        return this.currentKbDetails.files;\r\n      }\r\n      \r\n      return this.currentKbDetails.files.filter(file => \r\n        file.name.toLowerCase().includes(this.fileSearchQuery.toLowerCase())\r\n      );\r\n    }\r\n  },\r\n  created() {\r\n    this.initUserData();\r\n    this.fetchKnowledgeBases();\r\n  },\r\n  methods: {\r\n    initUserData() {\r\n      const userData = localStorage.getItem('user');\r\n      if (userData) {\r\n        const user = JSON.parse(userData);\r\n        this.username = user.username || '管理员';\r\n        this.isAdmin = user.is_admin || false;\r\n        if (user.avatar) {\r\n          this.userAvatar = user.avatar;\r\n        }\r\n      }\r\n    },\r\n    \r\n    async fetchKnowledgeBases() {\r\n      this.loading = true;\r\n      try {\r\n        // 模拟API调用获取知识库列表\r\n        await new Promise(resolve => setTimeout(resolve, 800));\r\n        \r\n        // 模拟数据\r\n        this.knowledgeBases = [\r\n          { \r\n            id: 1, \r\n            name: '法律法规知识库', \r\n            file_count: 8, \r\n            description: '关于劳动争议案件适用法律的最新解释',\r\n            update_time: '2023-06-15T08:30:00Z',\r\n            files: [\r\n              { id: 101, name: '劳动法解释.pdf', type: 'pdf', size: 2456789, upload_time: '2023-06-15T08:30:00Z' },\r\n              { id: 102, name: '劳动合同范本.docx', type: 'docx', size: 12456, upload_time: '2023-06-18T14:20:00Z' }\r\n            ]\r\n          },\r\n          { \r\n            id: 2, \r\n            name: '新闻传播学资料库', \r\n            file_count: 12, \r\n            description: '撰写一个「新闻价值」的名词解释',\r\n            update_time: '2023-06-20T10:45:00Z',\r\n            files: [\r\n              { id: 201, name: '新闻学理论.pdf', type: 'pdf', size: 3456789, upload_time: '2023-06-20T极速问诊10:45:00Z' }\r\n            ]\r\n          },\r\n          { \r\n            id: 3, \r\n            name: '公益法律援助智库', \r\n            file_count: 5, \r\n            description: '分手了，恋爱期间的赠与还能要回吗?',\r\n            update_time: '2023-06-22T16:15:极速问诊00Z',\r\n            files: []\r\n          }\r\n        ];\r\n        \r\n        if (this.knowledgeBases.length > 0 && !this.current极速问诊Kb) {\r\n          this.currentKb = this.knowledgeBases[0].id;\r\n          this.currentKbDetails = this.knowledgeBases[0];\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('获取知识库失败: ' + (error.message || '未知错误'));\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    \r\n    selectKb(kb) {\r\n      this.currentKb = kb.id;\r\n      this.currentKbDetails = kb;\r\n      this.currentChatId = null; // 切换知识库时重置聊天\r\n    },\r\n    \r\n    createKB() {\r\n      this.editType = 'create';\r\n      this.editForm = {\r\n        id: null,\r\n        name: '',\r\n        description: '',\r\n        visibility: 'private'\r\n      };\r\n      this.editDialogVisible = true;\r\n    },\r\n    \r\n    editKB(kb) {\r\n      this.editType = 'edit';\r\n      this.editForm = {\r\n        id: kb.id,\r\n        name: kb.name,\r\n        description: kb.description || '',\r\n        visibility: 'private'\r\n      };\r\n      this.editDialogVisible = true;\r\n    },\r\n    \r\n    confirmEdit() {\r\n      if (!this.editForm.name.trim()) {\r\n        this.$message.warning('请输入知识库名称');\r\n        return;\r\n      }\r\n      \r\n      if (this.editType === 'create') {\r\n        // 创建新知识库\r\n        const newKb = {\r\n          id: Date.now(),\r\n          name: this.editForm.name,\r\n          description: this.edit极速问诊Form.description,\r\n          file_count: 0,\r\n          files: [],\r\n          update_time: new Date().toISOString()\r\n        };\r\n        \r\n        this.knowledgeBases.push(newKb);\r\n        this.currentKb = newKb.id;\r\n        this.currentKbDetails = newKb;\r\n        this.$message.success(`知识库\"${newKb.name}\"创建成功`);\r\n      } else {\r\n        // 编辑现有知识库\r\n        const kbIndex = this.knowledgeBases.findIndex(kb => kb.id === this.editForm.id);\r\n        if (kbIndex !== -1) {\r\n          this.knowledgeBases[kbIndex].name = this.editForm.name;\r\n          this.knowledgeBases[kbIndex].description = this.editForm.description;\r\n          \r\n          if (this.currentKb === this.editForm.id) {\r\n            this.currentKbDetails = this.knowledgeBases[kbIndex];\r\n          }\r\n          \r\n          this.$message.success('知识库更新成功');\r\n        }\r\n      }\r\n      \r\n      this.editDialogVisible = false;\r\n    },\r\n    \r\n    deleteKb(kb) {\r\n      this.$confirm(`确定删除知识库 \"${kb.name}\"? 所有关联文件也将被删除`, '删除确认', {\r\n        confirmButtonText: '删除',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n        confirmButtonClass: 'el-button--danger'\r\n      }).then(() => {\r\n        const kbIndex = this.knowledgeBases.findIndex(k => k.id === kb.id);\r\n        if (kbIndex !== -1) {\r\n          this.knowledgeBases.splice(kbIndex, 1);\r\n          \r\n          if (this.currentKb === kb.id) {\r\n            this.currentKb = this.knowledgeBases.length > 0 ? this.knowledgeBases[0].id : null;\r\n            this.currentKbDetails = this.currentKb ? this.knowledgeBases[0] : null;\r\n          }\r\n          \r\n          this.$message.success('知识库已删除');\r\n        }\r\n      }).catch(() => {});\r\n    },\r\n    \r\n    shareKB(kb) {\r\n      this.$prompt('请输入分享对象的邮箱', '分享知识库', {\r\n        confirmButtonText: '分享',\r\n        cancelButtonText: '取消',\r\n        inputPattern: /^[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?/,\r\n        inputErrorMessage: '邮箱格式不正确'\r\n      }).then(({ value }) => {\r\n        this.$message.success(`已分享知识库\"${kb.name}\"给 ${value}`);\r\n      }).catch(() => {});\r\n    },\r\n    \r\n    exportKB(kb) {\r\n      this.$message.info(`开始导出知识库: ${kb.name}`);\r\n      // 实际应用中这里应调用API导出知识库\r\n    },\r\n    \r\n    handleUploadSuccess(fileData) {\r\n      if (!this.currentKbDetails.files) {\r\n        this.currentKbDetails.files = [];\r\n      }\r\n      \r\n      this.currentKbDetails.files.push({\r\n        id: Date.now(),\r\n        name: fileData.filename,\r\n        type: fileData.type || 'unknown',\r\n        size: fileData.size || 0,\r\n        upload_time: new Date().toISOString()\r\n      });\r\n      \r\n      this.currentKbDetails.file_count = this.currentKbDetails.files.length;\r\n      this.uploadDialogVisible = false;\r\n      this.$message.success(`文件\"${fileData.filename}\"上传成功`);\r\n    },\r\n    \r\n    handleUploadClose(done) {\r\n      this.$confirm('确定要关闭上传窗口吗?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        done();\r\n      }).catch(() => {});\r\n    },\r\n    \r\n    getFileIcon(fileType) {\r\n      const typeMap = {\r\n        pdf: 'pdf-color',\r\n        txt: 'txt-color',\r\n        doc: 'doc-color',\r\n        docx: 'doc-color',\r\n        xls: 'xls-color',\r\n        xlsx: 'xls-color',\r\n        ppt: 'ppt-color',\r\n        pptx: 'ppt-color'\r\n      };\r\n      const type = fileType.toLowerCase();\r\n      return typeMap[type] || 'el-icon-document';\r\n    },\r\n    \r\n    getKbColor(kbId) {\r\n      return this.kbColors[kbId % this.kbColors.length];\r\n    },\r\n    \r\n    formatSize(bytes) {\r\n      if (bytes === 0) return '0 B';\r\n      const k = 1024;\r\n      const sizes = ['B', 'KB', 'MB', 'GB'];\r\n      const i = Math.floor(Math.log(bytes) /Math.log(k));\r\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n    },\r\n    \r\n    formatDate(dateString) {\r\n      const date = new Date(dateString);\r\n      return `${date.getFullYear()}-${(date.getMonth()+1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\r\n    },\r\n    \r\n    formatRelativeTime(dateString) {\r\n      const date = new Date(dateString);\r\n      const now = new Date();\r\n      const diffTime = Math.abs(now - date);\r\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n      \r\n      if (diffDays === 1) return '今天';\r\n      if (diffDays === 2) return '昨天';\r\n      if (diffDays < 7) return `${diffDays}天前`;\r\n      if (diffDays < 30) return `${Math.floor(diffDays / 7)}周前`;\r\n      return this.formatDate(dateString);\r\n    },\r\n    \r\n    downloadFile(file) {\r\n      this.$message.info(`开始下载: ${file.name}`);\r\n      // 实际应用中这里应调用API下载文件\r\n    },\r\n    \r\n    previewFile(file) {\r\n      this.$message.info(`预览文件: ${file.name}`);\r\n      // 实际应用中这里应实现文件预览功能\r\n    },\r\n    \r\n    deleteFile(file) {\r\n      this.$confirm(`确定删除文件 \"${file.name}\"?`, '删除确认', {\r\n        confirmButtonText: '删除',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        const fileIndex = this.currentKbDetails.files.findIndex(f => f.id === file.id);\r\n        if (fileIndex !== -1) {\r\n          this.currentKbDetails.files.splice(fileIndex, 1);\r\n          this.currentKbDetails.file_count = this.currentKbDetails.files.length;\r\n          this.$message.success('文件极速问诊已删除');\r\n        }\r\n      }).catch(() => {});\r\n    },\r\n    \r\n    showUploadDialog() {\r\n      if (!this.currentKb) {\r\n        this.$message.warning('请先选择一个知识库');\r\n        return;\r\n      }\r\n      this.uploadDialogVisible = true;\r\n    },\r\n    \r\n    handleFileUpload(file) {\r\n      // 处理文件上传\r\n      this.showUploadDialog();\r\n      return false; // 阻止默认上传行为\r\n    },\r\n    \r\n    sendMessage() {\r\n      if (!this.userMessage.trim()) return;\r\n      \r\n      this.sendingMessage = true;\r\n      \r\n      // 如果没有当前对话，创建一个新的\r\n      if (!this.currentChatId) {\r\n        this.currentChatId = 'chat_' + Date.now();\r\n      }\r\n      \r\n      // 模拟发送消息的延迟\r\n      setTimeout(() => {\r\n        this.userMessage = '';\r\n        this.sendingMessage = false;\r\n      }, 500);\r\n    },\r\n    \r\n    askSuggestedQuestion(question) {\r\n      this.userMessage = question;\r\n      this.sendMessage();\r\n    },\r\n    \r\n    startNewChat() {\r\n      this.currentChatId = 'chat_' + Date.now();\r\n    },\r\n    \r\n    showChatHistory() {\r\n      this.$message.info('打开对话历史');\r\n      // 实际应用中这里应打开对话历史面板\r\n    },\r\n    \r\n    sortKbs(criteria) {\r\n      this.$message.info(`按${criteria}排序知识库`);\r\n      // 实际应用中这里应实现排序逻辑\r\n    },\r\n    \r\n    sortFiles(criteria) {\r\n      this.$message.info(`按${criteria}排序文件`);\r\n      // 实际应用中这里应实现排序逻辑\r\n    },\r\n    \r\n    goToProfile() {\r\n      this.$message.info('打开个人中心');\r\n      // 实际应用中这里应跳转到个人中心\r\n    },\r\n    \r\n    goToAdmin() {\r\n      this.$router.push('/admin');\r\n    },\r\n    \r\n    logout() {\r\n      this.$confirm('确定要退出登录吗?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'info'\r\n      }).then(() => {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n        \r\n        if (this.$store) {\r\n          this.$store.commit('setToken', null);\r\n          this.$store.commit('setUser', null);\r\n        }\r\n        \r\n        this.$router.push('/login');\r\n        this.$message.success('您已成功退出登录');\r\n      }).catch(() => {});\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.home-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  background-color: #f7f9fc;\r\n}\r\n\r\n.app-header {\r\n  background: #fff;\r\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.08);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0 24px;\r\n  z-index: 100;\r\n  border-bottom: 1px solid #eaeef2;\r\n}\r\n\r\n.logo {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n}\r\n\r\n.logo-img {\r\n  height: 32px;\r\n}\r\n\r\n.app-title {\r\n  margin: 0;\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  color: #1f2d3d;\r\n}\r\n\r\n.header-center {\r\n  flex: 1;\r\n  max-width: 500px;\r\n  margin: 0 40px;\r\n}\r\n\r\n.global-search {\r\n  width: 100%;\r\n}\r\n\r\n.header-right {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 16px;\r\n}\r\n\r\n.header-action {\r\n  cursor: pointer;\r\n  padding: 8px;\r\n  border-radius: 6px;\r\n  transition: background-color 0.2s;\r\n  font-size: 18px;\r\n  color: #5e7ce0;\r\n}\r\n\r\n.header-action:hover {\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.user-dropdown {\r\n  cursor: pointer;\r\n}\r\n\r\n.user-info {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 8px 12px;\r\n  border-radius: 6px;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.user-info:hover {\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.username {\r\n  margin-left: 10px;\r\n  margin-right: 6px;\r\n  font-weight: 500;\r\n  color: #1f2d3d;\r\n}\r\n\r\n.main-content {\r\n  display: flex;\r\n  flex: 1;\r\n  overflow: hidden;\r\n  gap: 0;\r\n}\r\n\r\n.knowledge-section {\r\n  flex: 0 0 320px;\r\n  background-color: #fff;\r\n  border-right: 1px solid #eaeef2;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n}\r\n\r\n.chat-section {\r\n  flex: 1;\r\n  display: flex;\r\n  flex极速问诊-direction: column;\r\n  background-color: #fafbfc;\r\n  position: relative;\r\n}\r\n\r\n.file-section {\r\n  flex: 0 0 320px;\r\n  background-color: #fff;\r\n  border-left: 1px solid #eaeef2;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n}\r\n\r\n.section-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 16px 20px;\r\n  border-bottom: 1px solid #eaeef2;\r\n}\r\n\r\n.section-title {\r\n  margin: 0;\r\n  font-size: 1.1rem;\r\n  font-weight: 600;\r\n  color: #1f2d3d;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.kb-toolbar, .file-toolbar {\r\n  display: flex;\r\n  gap: 8px;\r\n  padding: 16px;\r\n  border-bottom: 1px solid #eaeef2;\r\n}\r\n\r\n.sort-dropdown {\r\n  margin-left: auto;\r\n}\r\n\r\n.kb-list, .file-list {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 8px;\r\n}\r\n\r\n.kb-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 12px 16px;\r\n  border-radius: 8px;\r\n  margin-bottom: 8px;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  border: 1px solid transparent;\r\n}\r\n\r\n.kb-item:hover {\r\n  background-color: #f5f7fa;\r\n  border-color: #eaeef2;\r\n}\r\n\r\n.kb-item.active {\r\n  background-color: #ecf5ff;\r\n  border-color: #b3d8ff;\r\n}\r\n\r\n.kb-icon {\r\n  margin-right: 12px;\r\n  font-size: 20px;\r\n}\r\n\r\n.kb-info {\r\n  flex: 1;\r\n}\r\n\r\n.kb-name {\r\n  font-weight: 500;\r\n  margin-bottom: 4px;\r\n  color: #1f2d3d;\r\n}\r\n\r\n.k极速问诊b-desc {\r\n  font-size: 0.85rem;\r\n  color: #87909d;\r\n  margin-bottom: 6px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.kb-meta {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  font-size: 0.75rem;\r\n  color: #99a9bf;\r\n}\r\n\r\n.kb-actions {\r\n  opacity: 0;\r\n  transition: opacity 0.2s;\r\n}\r\n\r\n.kb-item:hover .kb-actions {\r\n  opacity: 1;\r\n}\r\n\r\n.empty-state {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 40px 20px;\r\n  text-align: center;\r\n}\r\n\r\n.empty-image {\r\n  width: 160px;\r\n  height: 160px;\r\n  margin-bottom: 16px;\r\n  opacity: 0.7;\r\n}\r\n\r\n.empty-text {\r\n  font-size: 1rem;\r\n  color: #1f2d3d;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.empty-subtext {\r\n  font-size: 0.85rem;\r\n  color: #99a9bf;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.chat-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 12px 24px;\r\n  border-bottom: 1px solid #eaeef2;\r\n  background-color: #fff;\r\n}\r\n\r\n.current-kb-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n}\r\n\r\n.kb-badge {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  padding: 6px 12px;\r\n  background-color: #f0f5ff;\r\n  border-radius: 16px;\r\n  color: #1e6bc6;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.chat-actions {\r\n  display: flex;\r\n  gap: 8px;\r\n}\r\n\r\n.chat-container {\r\n  flex: 1;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.chat-welcome {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 40px;\r\n}\r\n\r\n.welcome-content {\r\n  text-align: center;\r\n  max-width: 500px;\r\n}\r\n\r\n.welcome-image {\r\n  width: 200px;\r\n  height: 200px;\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.welcome-content h2 {\r\n  margin-bottom: 12px;\r\n  color: #1f2d3d;\r\n  font-weight: 600;\r\n}\r\n\r\n.welcome-content p {\r\n  color: #99a9bf;\r\n  margin-bottom: 32px;\r\n}\r\n\r\n.suggested-questions {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n}\r\n\r\n.question-card {\r\n  border: 1px solid #eaeef2;\r\n  border-radius: 12px;\r\n  padding: 16px;\r\n  transition: all 0.2s;\r\n  background-color: #fff;\r\n}\r\n\r\n.question-card:hover {\r\n  border-color: #b3d8ff;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.question-content {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.question-text {\r\n  flex: 1;\r\n  color: #1f2d3d;\r\n  text-align: left;\r\n}\r\n\r\n.ask-btn {\r\n  color: #5e7ce0;\r\n  font-size: 16px;\r\n}\r\n\r\n.chat-main {\r\n  flex: 1;\r\n  display: flex;\r\n  height: 100%;\r\n}\r\n\r\n.chat-box {\r\n  flex: 1;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n}\r\n\r\n.chat-input-container {\r\n  padding: 16px 24px;\r\n  background-color: #fff;\r\n  border-top: 1px solid #eaeef2;\r\n}\r\n\r\n.input-actions {\r\n  margin-bottom: 12px;\r\n  display: flex;\r\n  gap: 8px;\r\n}\r\n\r\n.input-main {\r\n  display: flex;\r\n  gap: 12px;\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.message-input {\r\n  flex: 1;\r\n}\r\n\r\n.message-input >>> .el-textarea__inner {\r\n  border-radius: 12px;\r\n  resize: none;\r\n}\r\n\r\n.send-button {\r\n  flex-shrink: 0;\r\n  align-self: flex-end;\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.model-selector {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n}\r\n\r\n.file-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 12px;\r\n  border-radius: 8px;\r\n  margin-bottom: 8px;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.file-item:hover {\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.file-icon {\r\n  margin-right: 12px;\r\n  font-size: 24px;\r\n  color: #5e7ce0;\r\n}\r\n\r\n.file-info {\r\n  flex: 1;\r\n}\r\n\r\n.file-name {\r\n  font-weight: 500;\r\n  margin-bottom: 4px;\r\n  color: #1f2d3d;\r\n}\r\n\r\n.file-meta {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 6px;\r\n  font-size: 0.75rem;\r\n  color: #99a9bf;\r\n}\r\n\r\n.file-actions {\r\n  display: flex;\r\n  gap: 4px;\r\n  opacity: 0;\r\n  transition: opacity 0.2s;\r\n}\r\n\r\n.file-item:hover .file-actions {\r\n  opacity: 1;\r\n}\r\n\r\n.danger-btn {\r\n  color: #f56c6c;\r\n}\r\n\r\n.danger-item {\r\n  color: #f56c6c;\r\n}\r\n\r\n.pdf-color {\r\n  color: #f40f02;\r\n}\r\n\r\n.txt-color {\r\n  color: #5e7ce0;\r\n}\r\n\r\n.doc-color {\r\n  color: #0070c0;\r\n}\r\n\r\n.xls-color {\r\n  color: #027d47;\r\n}\r\n\r\n.ppt-color {\r\n  color: #d24726;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 1200px) {\r\n  .knowledge-section,\r\n  .file-section {\r\n    flex: 0 0 280px;\r\n  }\r\n}\r\n\r\n@media (max-width: 992px) {\r\n  .file-section {\r\n    display: none;\r\n  }\r\n  \r\n  .knowledge-section {\r\n    flex: 0 0 280px;\r\n  }\r\n  \r\n  .header-center {\r\n    max-width: 300px;\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .knowledge-section {\r\n    position: absolute;\r\n    left: -280px;\r\n    z-index: 1000;\r\n    height: 100%;\r\n    transition: left 0.3s;\r\n    box-shadow: 2px 0 8px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .knowledge-section.open {\r\n    left: 0;\r\n  }\r\n  \r\n  .header-center {\r\n    display: none;\r\n  }\r\n  \r\n  .app-title {\r\n    font-size: 1.2rem;\r\n  }\r\n}\r\n\r\n@media (max-width: 576px) {\r\n  .app-header {\r\n    padding: 0 16px;\r\n  }\r\n  \r\n  .username {\r\n    display: none;\r\n  }\r\n  \r\n  .header-action {\r\n    padding: 6px;\r\n    font-size: 16px;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}