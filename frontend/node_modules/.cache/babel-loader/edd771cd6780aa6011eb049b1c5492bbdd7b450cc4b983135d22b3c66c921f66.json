{"ast":null,"code":"import FileUpload from '@/components/FileUpload.vue';\nimport ChatBox from '@/components/ChatBox.vue';\nexport default {\n  name: 'HomePage',\n  components: {\n    FileUpload,\n    ChatBox\n  },\n  data() {\n    return {\n      username: '管理员',\n      knowledgeBases: [{\n        id: 1,\n        name: '产品手册'\n      }, {\n        id: 2,\n        name: '技术文档'\n      }, {\n        id: 3,\n        name: '客户支持'\n      }],\n      currentKb: 1\n    };\n  },\n  created() {\n    // 从本地存储获取用户信息\n    const userData = localStorage.getItem('user');\n    if (userData) {\n      const user = JSON.parse(userData);\n      this.username = user.username || '管理员';\n    }\n\n    // 模拟获取知识库列表\n    this.fetchKnowledgeBases();\n  },\n  methods: {\n    fetchKnowledgeBases() {\n      // 实际应用中这里应调用API获取知识库列表\n      console.log('获取知识库列表...');\n      // 模拟API调用\n      setTimeout(() => {\n        // 这里保留初始化的数据\n      }, 500);\n    },\n    createKB() {\n      this.$prompt('请输入知识库名称', '创建知识库', {\n        confirmButtonText: '创建',\n        cancelButtonText: '取消',\n        inputPattern: /^[\\u4e00-\\u9fa5\\w\\s]{3,20}$/,\n        inputErrorMessage: '名称长度3-20个字符'\n      }).then(({\n        value\n      }) => {\n        // 模拟创建新知识库\n        const newKb = {\n          id: Date.now(),\n          name: value\n        };\n        this.knowledgeBases.push(newKb);\n        this.currentKb = newKb.id;\n        this.$message.success(`知识库\"${value}\"创建成功`);\n      }).catch(() => {});\n    },\n    selectKb(kb) {\n      this.currentKb = kb.id;\n    },\n    deleteKb(kb) {\n      this.$confirm(`确定删除知识库\"${kb.name}\"?`, '警告', {\n        confirmButtonText: '删除',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.knowledgeBases = this.knowledgeBases.filter(k => k.id !== kb.id);\n        if (this.currentKb === kb.id && this.knowledgeBases.length > 0) {\n          this.currentKb = this.knowledgeBases[0].id;\n        }\n        this.$message.success('知识库已删除');\n      }).catch(() => {});\n    },\n    handleUploadSuccess(filename) {\n      this.$message.success(`文件\"${filename}\"上传成功`);\n    },\n    logout() {\n      // 清除用户信息\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n\n      // 重置Vuex状态\n      if (this.$store) {\n        this.$store.commit('setToken', null);\n        this.$store.commit('setUser', null);\n      }\n\n      // 跳转到登录页\n      this.$router.push('/login');\n    }\n  }\n};","map":{"version":3,"names":["FileUpload","ChatBox","name","components","data","username","knowledgeBases","id","currentKb","created","userData","localStorage","getItem","user","JSON","parse","fetchKnowledgeBases","methods","console","log","setTimeout","createKB","$prompt","confirmButtonText","cancelButtonText","inputPattern","inputErrorMessage","then","value","newKb","Date","now","push","$message","success","catch","selectKb","kb","deleteKb","$confirm","type","filter","k","length","handleUploadSuccess","filename","logout","removeItem","$store","commit","$router"],"sources":["src/views/apps.vue"],"sourcesContent":["<template>\r\n  <div class=\"home-container\">\r\n    <!-- 顶部导航栏 -->\r\n    <el-header class=\"app-header\">\r\n      <div class=\"header-left\">\r\n        <h1 class=\"app-title\">知识库智能助手</h1>\r\n      </div>\r\n      <div class=\"header-right\">\r\n        <el-dropdown>\r\n          <span class=\"user-info\">\r\n            <el-avatar icon=\"el-icon-user-solid\" size=\"small\"></el-avatar>\r\n            <span class=\"username\">{{ username }}</span>\r\n            <i class=\"el-icon-caret-bottom\"></i>\r\n          </span>\r\n          <el-dropdown-menu slot=\"dropdown\">\r\n            <el-dropdown-item @click.native=\"logout\">退出登录</el-dropdown-item>\r\n          </el-dropdown-menu>\r\n        </el-dropdown>\r\n      </div>\r\n    </el-header>\r\n\r\n    <div class=\"main-content\">\r\n      <!-- 左侧知识库管理区域 -->\r\n      <div class=\"knowledge-section\">\r\n        <h2 class=\"section-title\">知识库管理</h2>\r\n        \r\n        <!-- 知识库选择与创建 -->\r\n        <div class=\"kb-selector\">\r\n          <el-select v-model=\"currentKb\" placeholder=\"选择知识库\" class=\"kb-dropdown\">\r\n            <el-option\r\n              v-for=\"kb in knowledgeBases\"\r\n              :key=\"kb.id\"\r\n              :label=\"kb.name\"\r\n              :value=\"kb.id\">\r\n            </el-option>\r\n          </el-select>\r\n          <el-button \r\n            type=\"primary\" \r\n            icon=\"el-icon-plus\" \r\n            @click=\"createKB\"\r\n            class=\"create-btn\">\r\n            新建\r\n          </el-button>\r\n        </div>\r\n        \r\n        <!-- 文件上传区域 -->\r\n        <div class=\"upload-section\">\r\n          <h3>上传文件到知识库</h3>\r\n          <FileUpload :kb-id=\"currentKb\" @uploaded=\"handleUploadSuccess\"/>\r\n        </div>\r\n        \r\n        <!-- 知识库列表 -->\r\n        <div class=\"kb-list\">\r\n          <h3>我的知识库</h3>\r\n          <el-table :data=\"knowledgeBases\" style=\"width: 100%\">\r\n            <el-table-column prop=\"name\" label=\"名称\"></el-table-column>\r\n            <el-table-column label=\"操作\" width=\"120\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button \r\n                  size=\"mini\" \r\n                  type=\"text\"\r\n                  @click=\"selectKb(scope.row)\">\r\n                  选择\r\n                </el-button>\r\n                <el-button \r\n                  size=\"mini\" \r\n                  type=\"text\" \r\n                  style=\"color: #F56C6C;\"\r\n                  @click=\"deleteKb(scope.row)\">\r\n                  删除\r\n                </el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 右侧聊天区域 -->\r\n      <div class=\"chat-section\">\r\n        <h2 class=\"section-title\">智能对话</h2>\r\n        <div class=\"chat-container\">\r\n          <ChatBox :kb-id=\"currentKb\" class=\"chat-box\"/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport FileUpload from '@/components/FileUpload.vue';\r\nimport ChatBox from '@/components/ChatBox.vue';\r\n\r\nexport default {\r\n  name: 'HomePage',\r\n  components: {\r\n    FileUpload,\r\n    ChatBox\r\n  },\r\n  data() {\r\n    return {\r\n      username: '管理员',\r\n      knowledgeBases: [\r\n        { id: 1, name: '产品手册' },\r\n        { id: 2, name: '技术文档' },\r\n        { id: 3, name: '客户支持' }\r\n      ],\r\n      currentKb: 1\r\n    };\r\n  },\r\n  created() {\r\n    // 从本地存储获取用户信息\r\n    const userData = localStorage.getItem('user');\r\n    if (userData) {\r\n      const user = JSON.parse(userData);\r\n      this.username = user.username || '管理员';\r\n    }\r\n    \r\n    // 模拟获取知识库列表\r\n    this.fetchKnowledgeBases();\r\n  },\r\n  methods: {\r\n    fetchKnowledgeBases() {\r\n      // 实际应用中这里应调用API获取知识库列表\r\n      console.log('获取知识库列表...');\r\n      // 模拟API调用\r\n      setTimeout(() => {\r\n        // 这里保留初始化的数据\r\n      }, 500);\r\n    },\r\n    createKB() {\r\n      this.$prompt('请输入知识库名称', '创建知识库', {\r\n        confirmButtonText: '创建',\r\n        cancelButtonText: '取消',\r\n        inputPattern: /^[\\u4e00-\\u9fa5\\w\\s]{3,20}$/,\r\n        inputErrorMessage: '名称长度3-20个字符'\r\n      }).then(({ value }) => {\r\n        // 模拟创建新知识库\r\n        const newKb = {\r\n          id: Date.now(),\r\n          name: value\r\n        };\r\n        this.knowledgeBases.push(newKb);\r\n        this.currentKb = newKb.id;\r\n        this.$message.success(`知识库\"${value}\"创建成功`);\r\n      }).catch(() => {});\r\n    },\r\n    selectKb(kb) {\r\n      this.currentKb = kb.id;\r\n    },\r\n    deleteKb(kb) {\r\n      this.$confirm(`确定删除知识库\"${kb.name}\"?`, '警告', {\r\n        confirmButtonText: '删除',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.knowledgeBases = this.knowledgeBases.filter(k => k.id !== kb.id);\r\n        if (this.currentKb === kb.id && this.knowledgeBases.length > 0) {\r\n          this.currentKb = this.knowledgeBases[0].id;\r\n        }\r\n        this.$message.success('知识库已删除');\r\n      }).catch(() => {});\r\n    },\r\n    handleUploadSuccess(filename) {\r\n      this.$message.success(`文件\"${filename}\"上传成功`);\r\n    },\r\n    logout() {\r\n      // 清除用户信息\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      \r\n      // 重置Vuex状态\r\n      if (this.$store) {\r\n        this.$store.commit('setToken', null);\r\n        this.$store.commit('setUser', null);\r\n      }\r\n      \r\n      // 跳转到登录页\r\n      this.$router.push('/login');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.home-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.app-header {\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0 20px;\r\n  z-index: 100;\r\n}\r\n\r\n.app-title {\r\n  margin: 0;\r\n  font-size: 1.5rem;\r\n  color: #409EFF;\r\n}\r\n\r\n.user-info {\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n}\r\n\r\n.username {\r\n  margin-left: 8px;\r\n  margin-right: 4px;\r\n}\r\n\r\n.main-content {\r\n  display: flex;\r\n  flex: 1;\r\n  overflow: hidden;\r\n  padding: 20px;\r\n  gap: 20px;\r\n}\r\n\r\n.knowledge-section {\r\n  flex: 0 0 320px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.chat-section {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  overflow: hidden;\r\n}\r\n\r\n.section-title {\r\n  margin-top: 0;\r\n  margin-bottom: 16px;\r\n  color: #303133;\r\n  border-bottom: 1px solid #ebeef5;\r\n  padding-bottom: 12px;\r\n}\r\n\r\n.kb-selector {\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n  gap: 10px;\r\n}\r\n\r\n.kb-dropdown {\r\n  flex: 1;\r\n}\r\n\r\n.create-btn {\r\n  flex-shrink: 0;\r\n}\r\n\r\n.upload-section {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.kb-list {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n}\r\n\r\n.chat-container {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n}\r\n\r\n.chat-box {\r\n  flex: 1;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 992px) {\r\n  .main-content {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .knowledge-section {\r\n    flex: 0 0 auto;\r\n    margin-bottom: 20px;\r\n  }\r\n}\r\n</style>"],"mappings":"AAyFA,OAAAA,UAAA;AACA,OAAAC,OAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAH,UAAA;IACAC;EACA;EACAG,KAAA;IACA;MACAC,QAAA;MACAC,cAAA,GACA;QAAAC,EAAA;QAAAL,IAAA;MAAA,GACA;QAAAK,EAAA;QAAAL,IAAA;MAAA,GACA;QAAAK,EAAA;QAAAL,IAAA;MAAA,EACA;MACAM,SAAA;IACA;EACA;EACAC,QAAA;IACA;IACA,MAAAC,QAAA,GAAAC,YAAA,CAAAC,OAAA;IACA,IAAAF,QAAA;MACA,MAAAG,IAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAL,QAAA;MACA,KAAAL,QAAA,GAAAQ,IAAA,CAAAR,QAAA;IACA;;IAEA;IACA,KAAAW,mBAAA;EACA;EACAC,OAAA;IACAD,oBAAA;MACA;MACAE,OAAA,CAAAC,GAAA;MACA;MACAC,UAAA;QACA;MAAA,CACA;IACA;IACAC,SAAA;MACA,KAAAC,OAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,YAAA;QACAC,iBAAA;MACA,GAAAC,IAAA;QAAAC;MAAA;QACA;QACA,MAAAC,KAAA;UACAtB,EAAA,EAAAuB,IAAA,CAAAC,GAAA;UACA7B,IAAA,EAAA0B;QACA;QACA,KAAAtB,cAAA,CAAA0B,IAAA,CAAAH,KAAA;QACA,KAAArB,SAAA,GAAAqB,KAAA,CAAAtB,EAAA;QACA,KAAA0B,QAAA,CAAAC,OAAA,QAAAN,KAAA;MACA,GAAAO,KAAA;IACA;IACAC,SAAAC,EAAA;MACA,KAAA7B,SAAA,GAAA6B,EAAA,CAAA9B,EAAA;IACA;IACA+B,SAAAD,EAAA;MACA,KAAAE,QAAA,YAAAF,EAAA,CAAAnC,IAAA;QACAqB,iBAAA;QACAC,gBAAA;QACAgB,IAAA;MACA,GAAAb,IAAA;QACA,KAAArB,cAAA,QAAAA,cAAA,CAAAmC,MAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAnC,EAAA,KAAA8B,EAAA,CAAA9B,EAAA;QACA,SAAAC,SAAA,KAAA6B,EAAA,CAAA9B,EAAA,SAAAD,cAAA,CAAAqC,MAAA;UACA,KAAAnC,SAAA,QAAAF,cAAA,IAAAC,EAAA;QACA;QACA,KAAA0B,QAAA,CAAAC,OAAA;MACA,GAAAC,KAAA;IACA;IACAS,oBAAAC,QAAA;MACA,KAAAZ,QAAA,CAAAC,OAAA,OAAAW,QAAA;IACA;IACAC,OAAA;MACA;MACAnC,YAAA,CAAAoC,UAAA;MACApC,YAAA,CAAAoC,UAAA;;MAEA;MACA,SAAAC,MAAA;QACA,KAAAA,MAAA,CAAAC,MAAA;QACA,KAAAD,MAAA,CAAAC,MAAA;MACA;;MAEA;MACA,KAAAC,OAAA,CAAAlB,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}