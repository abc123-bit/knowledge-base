{"ast":null,"code":"export default {\n  data() {\n    return {\n      users: []\n    };\n  },\n  async created() {\n    await this.fetchUsers();\n  },\n  methods: {\n    async fetchUsers() {\n      try {\n        const response = await this.$axios.get('/admin/users', {\n          headers: {\n            'Authorization': `Bearer ${this.$store.state.token}`\n          }\n        });\n        this.users = response.data;\n      } catch (error) {\n        this.$message.error('获取用户列表失败');\n      }\n    },\n    editUser(user) {\n      this.$prompt('修改用户信息', '编辑用户', {\n        inputValue: user.username,\n        inputPattern: /^[a-zA-Z0-9]{3,20}$/,\n        inputErrorMessage: '用户名格式不正确'\n      }).then(async ({\n        value\n      }) => {\n        try {\n          // 实际应用中调用API更新用户\n          user.username = value;\n          this.$message.success('更新成功');\n        } catch (error) {\n          this.$message.error('更新失败');\n        }\n      });\n    },\n    deleteUser(user) {\n      this.$confirm('确定删除此用户?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          // 实际应用中调用API删除用户\n          this.users = this.users.filter(u => u.id !== user.id);\n          this.$message.success('删除成功');\n        } catch (error) {\n          this.$message.error('删除失败');\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","users","created","fetchUsers","methods","response","$axios","get","headers","$store","state","token","error","$message","editUser","user","$prompt","inputValue","username","inputPattern","inputErrorMessage","then","value","success","deleteUser","$confirm","confirmButtonText","cancelButtonText","type","filter","u","id"],"sources":["src/views/Admin.vue"],"sourcesContent":["<template>\r\n  <div class=\"admin-page\">\r\n    <h2>用户管理</h2>\r\n    \r\n    <el-table :data=\"users\" style=\"width: 100%\">\r\n      <el-table-column prop=\"id\" label=\"ID\"></el-table-column>\r\n      <el-table-column prop=\"username\" label=\"用户名\"></el-table-column>\r\n      <el-table-column prop=\"is_admin\" label=\"管理员\">\r\n        <template slot-scope=\"scope\">\r\n          <el-tag v-if=\"scope.row.is_admin\" type=\"success\">是</el-tag>\r\n          <el-tag v-else type=\"info\">否</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button size=\"mini\" @click=\"editUser(scope.row)\">编辑</el-button>\r\n          <el-button size=\"mini\" type=\"danger\" @click=\"deleteUser(scope.row)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      users: []\r\n    }\r\n  },\r\n  async created() {\r\n    await this.fetchUsers()\r\n  },\r\n  methods: {\r\n    async fetchUsers() {\r\n      try {\r\n        const response = await this.$axios.get('/admin/users', {\r\n          headers: {\r\n            'Authorization': `Bearer ${this.$store.state.token}`\r\n          }\r\n        })\r\n        this.users = response.data\r\n      } catch (error) {\r\n        this.$message.error('获取用户列表失败')\r\n      }\r\n    },\r\n    editUser(user) {\r\n      this.$prompt('修改用户信息', '编辑用户', {\r\n        inputValue: user.username,\r\n        inputPattern: /^[a-zA-Z0-9]{3,20}$/,\r\n        inputErrorMessage: '用户名格式不正确'\r\n      }).then(async ({ value }) => {\r\n        try {\r\n          // 实际应用中调用API更新用户\r\n          user.username = value\r\n          this.$message.success('更新成功')\r\n        } catch (error) {\r\n          this.$message.error('更新失败')\r\n        }\r\n      })\r\n    },\r\n    deleteUser(user) {\r\n      this.$confirm('确定删除此用户?', '警告', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(async () => {\r\n        try {\r\n          // 实际应用中调用API删除用户\r\n          this.users = this.users.filter(u => u.id !== user.id)\r\n          this.$message.success('删除成功')\r\n        } catch (error) {\r\n          this.$message.error('删除失败')\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":"AAwBA;EACAA,KAAA;IACA;MACAC,KAAA;IACA;EACA;EACA,MAAAC,QAAA;IACA,WAAAC,UAAA;EACA;EACAC,OAAA;IACA,MAAAD,WAAA;MACA;QACA,MAAAE,QAAA,cAAAC,MAAA,CAAAC,GAAA;UACAC,OAAA;YACA,gCAAAC,MAAA,CAAAC,KAAA,CAAAC,KAAA;UACA;QACA;QACA,KAAAV,KAAA,GAAAI,QAAA,CAAAL,IAAA;MACA,SAAAY,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;MACA;IACA;IACAE,SAAAC,IAAA;MACA,KAAAC,OAAA;QACAC,UAAA,EAAAF,IAAA,CAAAG,QAAA;QACAC,YAAA;QACAC,iBAAA;MACA,GAAAC,IAAA;QAAAC;MAAA;QACA;UACA;UACAP,IAAA,CAAAG,QAAA,GAAAI,KAAA;UACA,KAAAT,QAAA,CAAAU,OAAA;QACA,SAAAX,KAAA;UACA,KAAAC,QAAA,CAAAD,KAAA;QACA;MACA;IACA;IACAY,WAAAT,IAAA;MACA,KAAAU,QAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GAAAP,IAAA;QACA;UACA;UACA,KAAApB,KAAA,QAAAA,KAAA,CAAA4B,MAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,EAAA,KAAAhB,IAAA,CAAAgB,EAAA;UACA,KAAAlB,QAAA,CAAAU,OAAA;QACA,SAAAX,KAAA;UACA,KAAAC,QAAA,CAAAD,KAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}