{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      rememberMe: false,\n      loading: false,\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          message: '密码长度不能少于6个字符',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    async handleLogin() {\n      this.$refs.loginForm.validate(async valid => {\n        if (!valid) {\n          this.$message.error('请填写正确的登录信息');\n          return false;\n        }\n        this.loading = true;\n        try {\n          const response = await axios.post('http://localhost:8000/login', this.loginForm);\n          if (response.data.token) {\n            // 保存token\n            localStorage.setItem('token', response.data.token);\n            localStorage.setItem('user', JSON.stringify(response.data.user));\n            this.$message.success('登录成功');\n            this.$router.push('/knowledge-base');\n          } else {\n            this.$message.error('登录失败，请检查用户名和密码');\n          }\n        } catch (error) {\n          if (error.response && error.response.status === 401) {\n            this.$message.error('用户名或密码错误');\n          } else {\n            this.$message.error('登录请求失败，请稍后重试');\n          }\n        } finally {\n          this.loading = false;\n        }\n      });\n    },\n    forgotPassword() {\n      this.$prompt('请输入您的邮箱', '重置密码', {\n        confirmButtonText: '发送重置邮件',\n        cancelButtonText: '取消',\n        inputPattern: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n        inputErrorMessage: '邮箱格式不正确'\n      }).then(({\n        value\n      }) => {\n        this.$message.success(`重置密码链接已发送至: ${value}`);\n      }).catch(() => {});\n    },\n    registerAccount() {\n      this.$message.info('注册功能即将开放');\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","loginForm","username","password","rememberMe","loading","rules","required","message","trigger","min","methods","handleLogin","$refs","validate","valid","$message","error","response","post","token","localStorage","setItem","JSON","stringify","user","success","$router","push","status","forgotPassword","$prompt","confirmButtonText","cancelButtonText","inputPattern","inputErrorMessage","then","value","catch","registerAccount","info"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <el-form :model=\"loginForm\" class=\"login-form\" :rules=\"rules\" ref=\"loginForm\" @submit.native.prevent=\"handleLogin\">\r\n      <h2 class=\"login-title\">知识库系统登录</h2>\r\n      <el-form-item prop=\"username\">\r\n        <el-input \r\n          v-model=\"loginForm.username\" \r\n          placeholder=\"用户名\" \r\n          prefix-icon=\"el-icon-user\"\r\n          clearable>\r\n        </el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"password\">\r\n        <el-input \r\n          v-model=\"loginForm.password\" \r\n          type=\"password\" \r\n          placeholder=\"密码\" \r\n          prefix-icon=\"el-icon-lock\"\r\n          show-password>\r\n        </el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-checkbox v-model=\"rememberMe\">记住我</el-checkbox>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button \r\n          type=\"primary\" \r\n          native-type=\"submit\" \r\n          class=\"login-button\" \r\n          :loading=\"loading\"\r\n          round>\r\n          登录\r\n        </el-button>\r\n      </el-form-item>\r\n      <div class=\"login-links\">\r\n        <a href=\"#\" @click.prevent=\"forgotPassword\">忘记密码?</a>\r\n        <a href=\"#\" @click.prevent=\"registerAccount\">注册账号</a>\r\n      </div>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'Login',\r\n  data() {\r\n    return {\r\n      loginForm: {\r\n        username: '',\r\n        password: ''\r\n      },\r\n      rememberMe: false,\r\n      loading: false,\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n          { min: 6, message: '密码长度不能少于6个字符', trigger: 'blur' }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    async handleLogin() {\r\n      this.$refs.loginForm.validate(async (valid) => {\r\n        if (!valid) {\r\n          this.$message.error('请填写正确的登录信息');\r\n          return false;\r\n        }\r\n        \r\n        this.loading = true;\r\n        try {\r\n          const response = await axios.post('http://localhost:8000/login', this.loginForm);\r\n          if (response.data.token) {\r\n            // 保存token\r\n            localStorage.setItem('token', response.data.token);\r\n            localStorage.setItem('user', JSON.stringify(response.data.user));\r\n            \r\n            this.$message.success('登录成功');\r\n            this.$router.push('/knowledge-base');\r\n          } else {\r\n            this.$message.error('登录失败，请检查用户名和密码');\r\n          }\r\n        } catch (error) {\r\n          if (error.response && error.response.status === 401) {\r\n            this.$message.error('用户名或密码错误');\r\n          } else {\r\n            this.$message.error('登录请求失败，请稍后重试');\r\n          }\r\n        } finally {\r\n          this.loading = false;\r\n        }\r\n      });\r\n    },\r\n    forgotPassword() {\r\n      this.$prompt('请输入您的邮箱', '重置密码', {\r\n        confirmButtonText: '发送重置邮件',\r\n        cancelButtonText: '取消',\r\n        inputPattern: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\r\n        inputErrorMessage: '邮箱格式不正确'\r\n      }).then(({ value }) => {\r\n        this.$message.success(`重置密码链接已发送至: ${value}`);\r\n      }).catch(() => {});\r\n    },\r\n    registerAccount() {\r\n      this.$message.info('注册功能即将开放');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\r\n}\r\n\r\n.login-form {\r\n  width: 400px;\r\n  padding: 30px;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.login-title {\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n  color: #303133;\r\n  font-weight: 600;\r\n}\r\n\r\n.login-button {\r\n  width: 100%;\r\n  margin-top: 10px;\r\n}\r\n\r\n.login-links {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 15px;\r\n}\r\n\r\n.login-links a {\r\n  color: #606266;\r\n  text-decoration: none;\r\n  font-size: 14px;\r\n}\r\n\r\n.login-links a:hover {\r\n  color: #409EFF;\r\n}\r\n</style>"],"mappings":"AA2CA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,UAAA;MACAC,OAAA;MACAC,KAAA;QACAJ,QAAA,GACA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAN,QAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAE,OAAA;IACA,MAAAC,YAAA;MACA,KAAAC,KAAA,CAAAZ,SAAA,CAAAa,QAAA,OAAAC,KAAA;QACA,KAAAA,KAAA;UACA,KAAAC,QAAA,CAAAC,KAAA;UACA;QACA;QAEA,KAAAZ,OAAA;QACA;UACA,MAAAa,QAAA,SAAApB,KAAA,CAAAqB,IAAA,qCAAAlB,SAAA;UACA,IAAAiB,QAAA,CAAAlB,IAAA,CAAAoB,KAAA;YACA;YACAC,YAAA,CAAAC,OAAA,UAAAJ,QAAA,CAAAlB,IAAA,CAAAoB,KAAA;YACAC,YAAA,CAAAC,OAAA,SAAAC,IAAA,CAAAC,SAAA,CAAAN,QAAA,CAAAlB,IAAA,CAAAyB,IAAA;YAEA,KAAAT,QAAA,CAAAU,OAAA;YACA,KAAAC,OAAA,CAAAC,IAAA;UACA;YACA,KAAAZ,QAAA,CAAAC,KAAA;UACA;QACA,SAAAA,KAAA;UACA,IAAAA,KAAA,CAAAC,QAAA,IAAAD,KAAA,CAAAC,QAAA,CAAAW,MAAA;YACA,KAAAb,QAAA,CAAAC,KAAA;UACA;YACA,KAAAD,QAAA,CAAAC,KAAA;UACA;QACA;UACA,KAAAZ,OAAA;QACA;MACA;IACA;IACAyB,eAAA;MACA,KAAAC,OAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,YAAA;QACAC,iBAAA;MACA,GAAAC,IAAA;QAAAC;MAAA;QACA,KAAArB,QAAA,CAAAU,OAAA,gBAAAW,KAAA;MACA,GAAAC,KAAA;IACA;IACAC,gBAAA;MACA,KAAAvB,QAAA,CAAAwB,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}